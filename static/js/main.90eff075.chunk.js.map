{"version":3,"sources":["componentes/Header.js","componentes/Formulario.js","helpers.js","componentes/Mensaje.js","componentes/Resultado.js","componentes/Spinner.js","App.js","serviceWorker.js","index.js"],"names":["Header","titulo","Formulario","props","useState","error","setError","cantidad","setcantidad","plazo","setPlazo","setTotal","setCargando","onSubmit","e","preventDefault","setTimeout","total","totalCantidad","totalPlazo","calcularTotal","className","type","placeholder","onChange","parseInt","target","value","Mensaje","Resultado","Spinner","class","App","componente","cargando","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console","message"],"mappings":"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","file":"static/js/main.90eff075.chunk.js","sourcesContent":["import React, { Fragment } from \"react\";\r\n\r\nfunction Header({ titulo }) {\r\n  return (\r\n    <Fragment>\r\n      <h1>{titulo}</h1>\r\n    </Fragment>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","import React, { Fragment, useState } from \"react\";\r\nimport { calcularTotal } from \"../helpers\";\r\n\r\nconst Formulario = (props) => {\r\n  //State\r\n  const [error, setError] = useState(false);\r\n  const {\r\n    cantidad,\r\n    setcantidad,\r\n    plazo,\r\n    setPlazo,\r\n    setTotal,\r\n    setCargando,\r\n  } = props;\r\n  //Submit\r\n  const calcularPrestamo = (e) => {\r\n    e.preventDefault();\r\n\r\n    //Validacion\r\n    if (cantidad === 0 || plazo === \"\") {\r\n      setError(true);\r\n      return;\r\n    }\r\n    //Eliminar error\r\n    setError(false);\r\n\r\n    //Habilitar spinner\r\n    setCargando(true);\r\n\r\n    setTimeout(() => {\r\n      //Cotizacion\r\n      const total = calcularTotal(cantidad, plazo);\r\n\r\n      //Total\r\n      setTotal(total);\r\n\r\n      //Deshabilitar spinner\r\n      setCargando(false);\r\n    }, 2000);\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      <form onSubmit={calcularPrestamo}>\r\n        <div className=\"row\">\r\n          <div>\r\n            <label>Cantidad Prestamo</label>\r\n            <input\r\n              className=\"u-full-width\"\r\n              type=\"number\"\r\n              placeholder=\"Ej: 3000\"\r\n              onChange={(e) => setcantidad(parseInt(e.target.value))}\r\n            />\r\n          </div>\r\n          <div>\r\n            <label>Plazo para Pagar</label>\r\n            <select\r\n              className=\"u-full-width\"\r\n              onChange={(e) => setPlazo(parseInt(e.target.value))}\r\n            >\r\n              <option value=\"\">Seleccionar</option>\r\n              <option value=\"3\">3 meses</option>\r\n              <option value=\"6\">6 meses</option>\r\n              <option value=\"12\">12 meses</option>\r\n              <option value=\"24\">24 meses</option>\r\n            </select>\r\n          </div>\r\n          <div>\r\n            <input\r\n              type=\"submit\"\r\n              value=\"Calcular\"\r\n              className=\"button-primary u-full-width\"\r\n            />\r\n          </div>\r\n        </div>\r\n      </form>\r\n      {error ? (\r\n        <p className=\"error\">Todos los campos son obligatorios</p>\r\n      ) : null}\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default Formulario;\r\n","export function calcularTotal(cantidad, plazo) {\r\n  let totalCantidad;\r\n  if (cantidad <= 1000) {\r\n    totalCantidad = cantidad * 0.25;\r\n  } else if (cantidad > 1000 && cantidad <= 5000) {\r\n    totalCantidad = cantidad * 0.2;\r\n  } else if (cantidad > 5000 && cantidad <= 1000) {\r\n    totalCantidad = cantidad * 0.15;\r\n  } else {\r\n    totalCantidad = cantidad * 0.1;\r\n  }\r\n\r\n  let totalPlazo = 0;\r\n\r\n  switch (plazo) {\r\n    case 3:\r\n      totalPlazo = cantidad * 0.5;\r\n      break;\r\n    case 6:\r\n      totalPlazo = cantidad * 0.10;\r\n      break;\r\n    case 12:\r\n      totalPlazo = cantidad * 0.15;\r\n      break;\r\n    case 24:\r\n      totalPlazo = cantidad * 0.20;\r\n      break;\r\n    default:\r\n      break;\r\n  }\r\n  return totalPlazo + totalCantidad + cantidad;\r\n}","import React from \"react\";\r\n\r\nconst Mensaje = () => (\r\n  <p> Agrega una cantidad y plazo </p>\r\n);\r\n\r\nexport default Mensaje;\r\n","import React from \"react\";\r\n\r\nconst Resultado = ({ total, plazo, cantidad }) => (\r\n  <div className=\"u-full-width resultado\">\r\n    <h2> Resumen </h2> <p> Cantidad solicitada: {cantidad}€ </p>\r\n    <p>Pagar: {plazo} meses</p>\r\n    <p> Pago mensual: {total / plazo}€ </p> <p> Total: {total}€ </p>\r\n  </div>\r\n);\r\n\r\nexport default Resultado;\r\n","import React from \"react\";\r\nimport \"./Spinner.css\";\r\nconst Spinner = () => {\r\n  return (\r\n    <div class=\"spinner\">\r\n      <div className=\"rect1\"> </div> <div className=\"rect2\"> </div>\r\n      <div className=\"rect3\"> </div> <div className=\"rect4\"> </div>\r\n      <div className=\"rect5\"> </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Spinner;\r\n","import React, { Fragment, useState } from \"react\";\nimport Header from \"./componentes/Header\";\nimport Formulario from \"./componentes/Formulario\";\nimport Mensaje from \"./componentes/Mensaje\";\nimport Resultado from \"./componentes/Resultado\";\nimport Spinner from \"./componentes/Spinner\";\n\nfunction App() {\n  //State\n  const [cantidad, setcantidad] = useState(0);\n  const [plazo, setPlazo] = useState(\"\");\n  const [total, setTotal] = useState(0);\n  const [cargando, setCargando] = useState(false);\n\n  let componente;\n  if (cargando) {\n    componente = <Spinner />;\n  } else if (total === 0) {\n    componente = <Mensaje />;\n  } else {\n    componente = <Resultado total={total} plazo={plazo} cantidad={cantidad} />;\n  }\n  return (\n    <Fragment>\n      <Header titulo=\"Prestamos\" />\n      <div className=\"container\">\n        <Formulario\n          cantidad={cantidad}\n          setcantidad={setcantidad}\n          plazo={plazo}\n          setPlazo={setPlazo}\n          total={total}\n          setTotal={setTotal}\n          setCargando={setCargando}\n        />\n        <div className=\"mensajes\">{componente}</div>\n      </div>\n    </Fragment>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render( <\n    React.StrictMode >\n    <\n    App / >\n    <\n    /React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();"],"sourceRoot":""}